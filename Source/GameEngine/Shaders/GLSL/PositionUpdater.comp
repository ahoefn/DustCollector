// Updates positions using currentPosition and currentVelocity buffers, works in local sizes 64x3 so the 
// function starts with converting the openGL indexes to actual array indices.

#version 450 core
layout(local_size_x=64, local_size_y=3, local_size_z=1) in;

// Input Buffers:
layout(std430,binding=0)  buffer positionsBufferCurrent
{
    float pos[];
} positionsCurrent;

layout(std430,binding=1)  buffer positionsBufferFuture
{
    float pos[];
} positionsFuture;

layout(std430,binding=2)  buffer velocityBuffer
{
    float v[];
} velocities;

// Uniforms and consts:
uniform float deltaTime;
uniform int offSetX;

// Code:
void main()
{
    // Get correct index:
    uint id = uint(64 * dot(gl_WorkGroupID, vec3(1,1,1))) + gl_LocalInvocationID.x + 64 * offSetX;
    uint dir = gl_GlobalInvocationID.y;
    uint index = 3 * id + dir;

    // Update positions:
    positionsFuture.pos[index] = positionsCurrent.pos[index] + deltaTime*velocities.v[index];
}