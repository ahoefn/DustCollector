#version 450 core

layout(local_size_x=64, local_size_y=3, local_size_z=1) in;
layout(std430,binding=0)  buffer positionsBufferCurrent
{
    float pos[];
} positionsCurrent;
layout(std430,binding=1)  buffer positionsBufferFuture
{
    float pos[];
} positionsFuture;
layout(std430,binding=2)  buffer velocityBuffer
{
    float v[];
} velocities;
uniform float deltaTime;
uniform int offSetX;

const int MAXVELOCITY =3;

void main()
{
    uint index=gl_GlobalInvocationID.x+3*64*offSetX;
    velocities.v[index]=min(velocities.v[index],MAXVELOCITY);
    velocities.v[index]=max(velocities.v[index],-MAXVELOCITY);

    positionsFuture.pos[index] = positionsCurrent.pos[index] + deltaTime*velocities.v[index];
}