// Updates velocities based on current forces.

#version 450 core
layout(local_size_x=64, local_size_y=3, local_size_z=1) in;

// Input buffers:
layout(std430,binding=0)  buffer velocitiesBufferCurrent
{
    float v[];
} velocitiesCurrent;

layout(std430,binding=1)  buffer velocitiesBufferFuture
{
    float v[];
} velocitiesFuture;

layout(std430,binding=2)  buffer forcesBuffer 
{
    float F[];
} forces;

// Uniforms and floats:
uniform float deltaTime;
uniform int offSetX;
const int MAXVELOCITY = 3;

// Velocity updater:
void main()
{
    // Get correct index:
    uint id = uint(dot(gl_WorkGroupID, vec3(1,1,1))) + gl_GlobalInvocationID.x;
    uint dir = gl_GlobalInvocationID.y;
    uint index = 3 * (id + 64 * offSetX) + dir;
    
    // Update positions:
    velocitiesFuture.v[index] = velocitiesCurrent.v[index] + deltaTime*forces.F[index];
}